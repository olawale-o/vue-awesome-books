name: Issues

on:
  issues:
    types: [opened, edited]

jobs:
  comment_issue:
    name: Comment Issue
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: This comment was written by a bot!
      
      - name: Create Comment
        if: steps.fc.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Thank you ${{ github.event.issue.user.login }} for filing this issue
            - With GitHub **Markdown** :sparkles:
            - Created by [create-or-update-comment][1]

            [1]: https://github.com/peter-evans/create-or-update-comment
          reactions: heart
      
      - name: Update Comment
        if: steps.fc.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: |
            Thank you ${{ github.event.issue.user.login }} for updating this issue
            - With GitHub **Markdown** :sparkles:
            - Created by [create-or-update-comment][1]

            [1]: https://github.com/peter-evans/create-or-update-comment
          reactions: eyes
      
      - name: Print Comment ID
        run: echo "Comment ID - ${{ steps.fc.outputs.comment-id }}"
        shell: bash

      - name: Print Gihthub events
        run: echo "GITHUB CONTEXT ${{ toJSON(github) }}"
        shell: bash
          
    